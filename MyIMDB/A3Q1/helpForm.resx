<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>Welcome to the Movie Organizer App!

This app was made to help you with all your movie-querrying needs!

1) Searching (Basic)
- To perform a basic search on an item, simply select the filter type which you want from the drop down menu
located to the right of the search box you type into. Once you have selected an appropriate filter, enter your
search parameters in the empty search box and click the magnifying glass to the right of these two previous
boxes! A list of results will appear!

2) Searching (Advanced)
- Similar to the basic search in many ways, the Advanced Search function allows you to perform a search based
on multiple filters! Simply select the appropriate genres for your querry and enter in any other information in
the relavent boxes below. Once you have filled out the filters you wish to use, click the "search" button and a
list of results will appear!

3) Editing, Adding and Removing Movies
- Upon viewing the results of your search, double click on a movie to being up its information page. This page
contains all sorts of information about that movie, such as title, genre, rating, certification, cast and director. You
may find that you want to edit this information. This can be accomplished by clicking the appropriately labeled
button on the movies information page. Careful when doing this, however, as changes are often permanent!

4) My Lists
- This page is where you can view and create many great movie lists - from to-watch lists to lists of your all-time
top 10! The layout is simple - your lists are in the left table and the movies inside the list populate the table to
it's right. On the far right, you have the option to share your lists via Social Media, as well as the option to create
a new list.
- To create a list, you can click the "Create List" button. To add a movie to a list, navigate to that movie's
information page by searching for that movie using either the basic or advanced search. From this page you have
the option to add the movie to any of your lists.
- SHORTCUT: If you're looking for a quick way to add a movie from one list to another, simply select the list and 
CLICK AND DRAG the movie from the list onto another list. You will be prompted to save the change you made,
click 'yes'.

5) Scatter Plot
- If you've performed some basic and advanced searches, this is very similar. The obvious difference here is that
there is a visual representation of the results of your querry.
- Fill out the filters on the right. Note that you can simply search by a single filter by clicking the magnifying glass
located immediately to the right of that filter, or perform a multi-filter (advanced) search by filling out various filters
and clicking the "Adv. Srch." button. Don't worry, you do not have to fill out a specific number of filters for the
advanced search to work, it will work with any number of filters edited.
- The number of movies shown on the graph can be found at the top of the "filters" panel on the right, in a bright
magenta colour to make it easy to find.
- Please note that in the current version, scatter plot searches with more than 40 results will not show labels on the
data points on the chart. This is to prevent clutter. In future releases, a mouse-over will be added, allowing you to
move your mouse over a datapoint to see the title of the movie it represents.

6) View a Movie Trailer
- To view a movie trailer, simply find the movie via a search (basic or advanced) and double-click on the movie in
the search results. On the movie information page, you can view the trailer for that movie on the right hand side of
the page. This feature requires your PC to have Windows Media Player installed and up to date!

7) Log in or Create an Account
- To create an account or log in, simply click the "login/signup" button in the top right of any major page of the
the Movie Organizer. </value>
  </data>
</root>